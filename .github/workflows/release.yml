name: Release

on: [push]

jobs:
  release:
    name: Release

    runs-on: macos

    steps:

      - name: init
        uses: actions/checkout@v1

      - name: get package
        id: package
        uses: Ireoo/get-package@v1
        with:
          path: package.json
          key: version

      - name: create release
        id: release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{steps.package.outputs.version}}
          release_name: V${{steps.package.outputs.version}}
          draft: false
          prerelease: false

      - name: init cache
        env:
          git_cache: ${{secrets.GIT_CACHE}}
          upload_url: ${{steps.release.outputs.upload_url}}
          github_sha: ${{github.sha}}
        run: |
          git clone $git_cache cache
          cd cache
          echo "$upload_url" > $github_sha.txt
          git add $github_sha.txt
          git commit -m "$github_sha"
          git push

  build:
    needs: release

    name: Build
    
    runs-on: ${{matrix.os}}
    
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]

    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
#        if [ -f Gopkg.toml ]; then
#          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#          dep ensure -v
#        fi

    - name: Build
      run: go build -v .

    - name: upload windows
      uses: actions/upload-artifact@master
      if: startsWith(matrix.os, 'windows')
      with:
        name: API-Core-${{matrix.os}}
        path: API-Core.exe

    - name: upload macos & linux
      uses: actions/upload-artifact@master
      if: startsWith(matrix.os, 'macOS') || startsWith(matrix.os, 'ubuntu')
      with:
        name: API-Core-${{matrix.os}}
        path: API-Core

    - name: init cache
      id: cache
      shell: bash
      env:
        git_cache: ${{secrets.GIT_CACHE}}
        github_sha: ${{github.sha}}
      run: |
        git clone $git_cache cache
        cd cache
        echo "::set-output name=upload_url::$(cat $github_sha.txt)"

    - name: get upload url
      env:
        upload_url: ${{steps.cache.outputs.upload_url}}
      run:
        echo $upload_url

    - name: upload release
      uses: actions/upload-release-asset@v1.0.1
      if: startsWith(matrix.os, 'windows')
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.cache.outputs.upload_url}}
        asset_path: API-Core.exe
        asset_name: API-Core-${{matrix.os}}.exe
        asset_content_type: application/x-executable

    - name: upload release
      uses: actions/upload-release-asset@v1.0.1
      if: startsWith(matrix.os, 'macOS') || startsWith(matrix.os, 'ubuntu')
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.cache.outputs.upload_url}}
        asset_path: API-Core
        asset_name: API-Core-${{matrix.os}}
        asset_content_type: application/x-executable